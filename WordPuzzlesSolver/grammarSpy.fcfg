% start S
############################
# Grammar Rules
#############################

S[SEM=<?conj2(?conj(?relCl, ?advCl), ?advCl2)>] -> WhereCl[SEM=?relCl] Comma[BOUND=sentences, SEM=?conj] AdvCl[SEM=?advCl] Conj[BOUND=sentences, SEM=?conj2] AdvCl[SEM=?advCl2]

S[SEM=?vp] -> Pron[NUM=?n] VP[NUM=?n2, SEM=?vp]

S[SEM=<?np(?vp)>] -> NP[NUM=?n, SEM=?np] VP[NUM=?n, SEM=?vp] 

S[SEM=<?np(?vp)>] -> Quote[] NP[NUM=?n, SEM=?np] VP[NUM=?n, SEM=?vp] Question[] Quote[] Pron[NUM=?n] VP[PERS=?pers,SEM=?vp2]

S[SEM=<?conj2(?conj(?sent1, ?sent2), ?sent3)>] -> SentWear[SEM=?sent1] Comma[BOUND=sentences, SEM=?conj] SentWear[SEM=?sent2] Conj[BOUND=sentences, SEM=?conj2] SentWear[SEM=?sent3]

S[SEM=<?that(?sent1, ?sent2)>] -> S[SEM=?sent1] Conj[BOUND=sentences, TYPE=thatClause, SEM=?that] S[SEM=?sent2]

S[SEM=?sent2] -> SentNoSem[TYPE=noSem] Conj[BOUND=sentences, TYPE=thatClause] S[SEM=?sent2]

Sent[+COMPOUND, NUM=?num, PERS=?pers, SEM=<?conj2((?conj1(?sent1, ?sent2)), ?sent3)>] -> Sent[NUM=?num, PERS=?pers, SEM=?sent1] Comma[BOUND=noun, TYPE=and, SEM=?conj1] Sent[NUM=?num, PERS=?pers, SEM=?sent2] Conj[BOUND=PropN, TYPE=and, SEM=?conj2] Sent[NUM=?num, PERS=?pers, SEM=?sent3]

Sent[NUM=?num, PERS=?pers, SEM=?n1] -> NP[NUM=?num, PERS=?pers] VP[NUM=?num, PERS=?pers, SEM=?n1]

SentWear[SEM=<?np(?vp)>] -> NP[NUM=?n, SEM=?np] VP[NUM=?n, SEM=?vp] 

SentNoSem[TYPE=noSem] -> Pron[NUM=?n] VP[PERS=second] P[+about] Pron[NUM=?n1,PERS=?pers]

WhereCl[SEM=?relCl] -> PP[TYPE=where] RelCl[SEM=?relCl]

AdvCl[SEM=<?adv(?nom1, ?vp)>] -> NP[NUM=?n1, SEM=?nom1] Adv[TYPE=?type, SEM=?adv] VP[NUM=?n1, SEM=?vp]

RelCl[SEM=<?det(?nom, ?vp)>] -> RelPron[+where] Det[SEM=?det] NP[NUM=?n, SEM=?nom] VP[NUM=?n,SEM=?vp]

PP[TYPE=?type] -> P[+on] NP[TYPE=?type, NUM=?n]

NP[TYPE=where, NUM=?n] -> Det[SEM=?det] Nom[NUM=?n, SEM=?nom]

NP[NUM=?n, SEM=?nom] -> Det[NUM=?n, SEM=?det] Nom[NUM=?n, SEM=?np2] Gerund[SEM=?gerund] NP[NUM=?n, SEM=?nom]

NP[NUM=?n, SEM=?nom] -> Det[NUM=?n, SEM=?det] Nom[NUM=?n, SEM=?np2] P[+in] NP[NUM=?n, SEM=?nom]

NP[NUM=?n, SEM=?np2] -> Det[NUM=?n, SEM=?det] Nom[NUM=?n, SEM=?np2] 

NP[NUM=?n, SEM=?nom] -> Nom[NUM=?n, SEM=?nom]

NP[LOC=?l,NUM=?n,SEM=?np] -> PropN[LOC=?l,NUM=?n,SEM=?np] | InterPron[LOC=?l,NUM=?n,SEM=?np]

NP[NUM=?n, SEM=?nom, TYPE=ignoreDetSem] -> Det[SEM=?det] Nom[NUM=?n, SEM=?nom]

NP[NUM=?n, SEM=?nom ] -> Numeral[NUM=?n] Nom[NUM=?n, SEM=?nom]

NP[NUM=?nr, PERS=?pers, SEM=?sem] -> ImpersPron[NUM=?nr, PERS=?pers, SEM=?sem]


Nom[NUM=?n,SEM=?nom] -> N[NUM=?n,SEM=?nom]


VP[NUM=?n,SEM=<?v(?prd)>] -> AuxP[COP=?c,NUM=?n,SEM=?v] Pred[SEM=?prd]

VP[NUM=?n,SEM=?prd] -> Aux[+COP,NUM=pl,tns=pres] Pred[SEM=?prd]

VP[NUM=?n,SEM=?nom] -> VT[NUM=?n] NP[NUM=?n2, SEM=?nom, TYPE=ignoreDetSem]

VP[NUM=?n,SEM=?vp] -> IV[NUM=?n, SEM=?vp]

VP[NUM=?num, PERS=?pers, SEM=?n1] -> VT[NUM=?num, PERS=?pers] NP[NUM=?num, SEM=?n1]

VP[NUM=?n,SEM=?vp] -> SV[NUM=?n, SEM=?vp]  

VP[PERS=?pers,SEM=?vp] -> V[PERS=?pers,SEM=?vp] 

AuxP[COP=?c,NUM=?n,SEM=?aux] -> Aux[COP=?c,NUM=?n,SEM=?aux]
AuxP[SEM=?modal] -> Modal[SEM=?modal] V[+be]


Pred[SEM=?prd] -> Det[NUM=?n] Nom[NUM=?n, SEM=?prd]
Pred[SEM=?prd] -> Adv[+actually] Det[NUM=?n] Nom[NUM=?n, SEM=?prd]
Pred[SEM=<?conjD2((?conjD1(?np1, ?np2)), ?np3)>] -> NP[NUM=?nr, SEM=?np1, TYPE=ignoreDetSem] Comma[BOUND=noun, TYPE=or, SEM=?conjD1] NP[NUM=?nr, SEM=?np2, TYPE=ignoreDetSem] Conj[BOUND=noun, SEM=?conjD2] NP[NUM=?nr, SEM=?np3, TYPE=ignoreDetSem]

Pred[SEM=<?sent(?n1)>] -> VExpr[+approachedBy] NP[NUM=?nr1, SEM=?n1] Sent[+COMPOUND, NUM=?num, PERS=?pers, SEM=?sent]
Pred[SEM=<?sent(?n1)>] -> VExpr[+approachedBy] NP[NUM=?nr1, SEM=?n1] Colon[TYPE=enumeration] Sent[+COMPOUND, NUM=?num, PERS=?pers, SEM=?sent]

VExpr[+approachedBy] -> V[+approach] P[+by]

#############################
# Lexical Rules
#############################

PropN[-LOC,NUM=sg,SEM=<\P.P(hritik)>] -> 'Hritik'
PropN[-LOC,NUM=sg,SEM=<\P.P(sanjay)>] -> 'Sanjay'

PropN[-LOC,NUM=sg,SEM=<\P.P(kevin)>] -> 'Kevin'
PropN[-LOC,NUM=sg,SEM=<\P.P(trevor)>] -> 'Trevor'
PropN[-LOC,NUM=sg,SEM=<\P.P(mike)>] -> 'Mike'

N[NUM=sg,SEM=<\P.P(red)>] -> 'red'
N[NUM=sg,SEM=<\P.P(green)>] -> 'green'
N[NUM=sg,SEM=<\P.P(blue)>] -> 'blue'

N[NUM=sg,SEM=<\x.island(x)>] -> 'island'
N[NUM=sg,SEM=<\x.inhabitant(x)>] -> 'inhabitant'
N[NUM=pl,SEM=<\x.inhabitant(x)>] -> 'inhabitants'
N[NUM=sg,SEM=<\x.knight(x)>] -> 'knight'
N[NUM=pl,SEM=<\x.knight(x)>] -> 'knights'
N[NUM=sg,SEM=<\x.knave(x)>] -> 'knave'
N[NUM=pl,SEM=<\x.knave(x)>] -> 'knaves'
N[NUM=sg,SEM=<\x.spy(x)>] -> 'spy'
N[NUM=pl,SEM=<\x.spy(x)>] -> 'spies'
N[NUM=sg,SEM=<\x.truth(x)>] -> 'truth'
N[NUM=sg,SEM=<\x.man(x)>] -> 'man'

Conj[BOUND=noun, SEM=<\P Q x.((P(x) | Q(x)))>] -> 'or'
Conj[+either, SEM=<\T P.T(\x.(P(x)))>] -> 'either'
Conj[BOUND=sentences, SEM=<\P Q. ((P & Q))>] -> 'while'
Conj[BOUND=PropN, TYPE=and, SEM=<\P Q X.((P(X) & Q(X)))>] -> 'and'
Conj[BOUND=sentences, TYPE=thatClause, SEM=<\P Q ((P <-> Q))>] -> 'that'
Conj[BOUND=sentences, TYPE=f, SEM=<\P Q. ((P & Q))>] -> 'and'

Comma[BOUND=noun, TYPE=or, SEM=<\P Q x.((P(x) | Q(x)))>] -> ','
Comma[BOUND=noun, TYPE=and, SEM=<\P Q x.((P(x) & Q(x)))>] -> ','
Comma[BOUND=sentences, SEM=<\P Q. ((P & Q))>] -> ','

Colon[TYPE=enumeration] -> ':'
Question[] -> '?'
Quote[] -> '"'

Adv[TYPE=time, SEM=<\P Q. all x.(P(x) -> Q(x))>] -> 'always'

Aux[+COP,NUM=sg,SEM=<\P x.P(x)>,tns=pres] -> 'is'
Aux[+COP,NUM=pl,SEM=<\P x.P(x)>,tns=pres] -> 'are'

Modal[SEM=<\P x.P(x)>,tns=pres] -> 'can'

RelPron[NUM=pl, SEM=<\P Q.all x.(P(x) -> Q(x))>] -> 'whose'
RelPron[+where] -> 'where'

ImpersPron[NUM=sg, PERS=third, SEM=<\P.exists x.(P(x))>] -> 'One'|'one'

InterPron[-LOC, NUM=sg, SEM=<\P.P(x)>] -> 'who' | 'Who'

Numeral[NUM=pl] -> 'two'
Numeral[NUM=pl] -> 'three'

VT[TYPE=expr, NUM=pl, tns=pres] -> 'tell'
VT[NUM=sg, PERS=third, SEM=<\x.wear(x)>] -> 'wears'

IV[NUM=pl, SEM=<\x.lie(x)>, tns=pres] -> 'lie'
SV[NUM=sg, PERS=third, SEM=<\x.say(x)>] -> 'says'

Gerund[SEM=<\x.wear(x)>] -> 'wearing'

V[PERS=second, SEM=<\x.know(x)>] -> 'know'
V[PERS=second, SEM=<\x.ask(x)>] -> 'ask'
V[+approach] -> 'approached'
V[+be] -> 'be'

Det[SEM=<\P Q x.(P(x) & Q(x))>] -> 'the' | 'The'
Det[SEM=<\P Q.all x.(P(x) -> Q(x))>] -> 'each'
Det[NUM=sg,SEM=<\P Q.exists x.(P(x) & Q(x))>] -> 'a'

Adv[+actually] -> 'actually'

Pron[NUM=sg,SEM=<\P.P(you)>] -> 'You' | 'you'
Pron[NUM=pl,PERS=third,SEM=<\P.P(them)>] -> 'Them' | 'them'

P[+on] -> 'On' | 'on'
P[+by] -> 'by'
P[+about] -> 'about'
P[+in] -> 'in'
